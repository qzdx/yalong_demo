# set(TARGET_PLATFORM "linux_x64")
# set(TARGET_PLATFORM "android_v7a")
# set(TARGET_PLATFORM "win_x64")

# 判断编译目标平台
if(TARGET_PLATFORM STREQUAL "linux_arm")
    message("target platform: linux arm")
    option(PLATFORM_LINUX_ARM "linux arm" ON)
    option(SYSTEM_LINUX "linux system" ON)
elseif(TARGET_PLATFORM STREQUAL "linux_aarch64")
    message("target platform: linux aarch64")
    option(PLATFORM_LINUX_AARCH64 "linux aarch64" ON)
    option(SYSTEM_LINUX "linux system" ON)
elseif(TARGET_PLATFORM STREQUAL "linux_x64")
    message("target platform: linux x64")
    option(PLATFORM_LINUX_X64 "linux x64" ON)
    option(SYSTEM_LINUX "linux system" ON)
    
elseif(TARGET_PLATFORM STREQUAL "linux_android")
    message("target platform: linux_android")
    option(PLATFORM_LINUX_ANDROID "linux android" ON)
    option(SYSTEM_LINUX "linux system" ON)
elseif(TARGET_PLATFORM STREQUAL "linux_ecat_x64")
    message("target platform: linux ecat x64")
    option(PLATFORM_LINUX_ECAT_X64 "linux ecat x64" ON)
    option(SYSTEM_LINUX "linux system" ON)
elseif(TARGET_PLATFORM STREQUAL "win_x86")
    message("target platform: windows x86")
    option(PLATFORM_WINDOWS_X86 "windows x86" ON)
    option(SYSTEM_WINDOWS "windows system" ON)
elseif(TARGET_PLATFORM STREQUAL "win_x64")
    message("target platform: windows x64")
    option(PLATFORM_WINDOWS_X64 "windows x64" ON)
    option(SYSTEM_WINDOWS "windows system" ON)
else()
    message("error: unknown target platform!")
    message("please enter cmake cmd as:")
    message("cmake -DTARGET_PLATFORM=<name> ..")
    message("name = linux_arm/linux_aarch64/linux_x64/linux_ecat_x64/win_x86/win_x64")
    RETURN()
endif()

# 确定编译器和路径
if(PLATFORM_LINUX_ARM)
    message("prepare linux arm setting")
    set(CMAKE_C_COMPILER "/usr/bin/arm-linux-gnueabihf-gcc")
    set(CMAKE_CXX_COMPILER "/usr/bin/arm-linux-gnueabihf-g++")
    set(THIRD_LIB_INCLUDE /opt/3rdLib)
    set(THIRD_LIB_PATH linux_arm/arm)
    set(DEPEND_LIB_PATH linux_arm/arm)
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/$(DEPEND_LIB_PATH))
elseif(PLATFORM_LINUX_AARCH64)
    message("prepare linux aarch64 setting")
    set(CMAKE_C_COMPILER "/usr/bin/aarch64-linux-gnu-gcc")
    set(CMAKE_CXX_COMPILER "/usr/bin/aarch64-linux-gnu-g++")
    set(THIRD_LIB_INCLUDE /opt/3rdLib)
    set(THIRD_LIB_PATH linux_arm/aarch64)
    set(DEPEND_LIB_PATH linux_arm/aarch64)
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
elseif(PLATFORM_LINUX_X64)
    message("prepare linux x64 setting")
    set(THIRD_LIB_INCLUDE /opt/3rdLib)
    set(THIRD_LIB_PATH linux/x64)
    set(DEPEND_LIB_PATH linux/x64)
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
elseif(PLATFORM_LINUX_ANDROID)
    message("prepare linux android setting")
    set(THIRD_LIB_INCLUDE /opt/3rdLib)
    set(THIRD_LIB_PATH linux_android/armeabi-v7a)
    set(DEPEND_LIB_PATH linux_android/armeabi-v7a)
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
    add_definitions("-DPLATFORM_ANDROID")
elseif(PLATFORM_LINUX_ECAT_X64)
    message("prepare linux ecat x64 setting")
    set(THIRD_LIB_INCLUDE /opt/3rdLib)
    set(THIRD_LIB_PATH linux/x64)
    set(DEPEND_LIB_PATH linux_ecat/x64)
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
elseif(PLATFORM_WINDOWS_X86)
    message("prepare windows x86 setting")
    set(THIRD_LIB_INCLUDE C:/3rdLib)
    set(THIRD_LIB_PATH windows/x86)
    set(THIRD_LIB_PATH "${THIRD_LIB_PATH}/${CMAKE_INTDIR}")
    set(DEPEND_LIB_PATH windows/x86)
    set(DEPEND_LIB_PATH "${DEPEND_LIB_PATH}/${CMAKE_INTDIR}")
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
elseif(PLATFORM_WINDOWS_X64)
    message("prepare windows x64 setting")
    set(THIRD_LIB_INCLUDE C:/3rdLib)
    set(THIRD_LIB_PATH windows/x64)
    set(THIRD_LIB_PATH "${THIRD_LIB_PATH}/${CMAKE_INTDIR}")
    set(DEPEND_LIB_PATH windows/x64)
    set(DEPEND_LIB_PATH "${DEPEND_LIB_PATH}/${CMAKE_INTDIR}")
    set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin/${DEPEND_LIB_PATH})
endif()
